eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9vcGVuamRrODp2MS4xLjAKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSAuL2dyYWRsZXcgYnVpbGQKICAgIHdoZW46CiAgICAgZXZlbnQ6IFtwdXNoLCBwdWxsX3JlcXVlc3QsIHRhZ10KCiAgZG9ja2VyLWJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHB0dGctaXAtYXBpIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDogW21hc3RlciwgcmVmcy90YWdzLypdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQoKICB0YWctbGF0ZXN0LWRvY2tlci1pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwdHRnIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1pcC1hcGkgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtYXBpOmxhdGVzdAogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1pcC1hcGkgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtYXBpOmJ1aWxkLSR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLWFwaTpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1pcC1hcGk6YnVpbGQtJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKICB0YWctZG9ja2VyLWltYWdlLXdpdGgtZ2l0LXRhZzoKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtwdHRnIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgcHR0Zy1pcC1hcGkgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtYXBpOiR7RFJPTkVfVEFHfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLWFwaToke0RST05FX1RBR30KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCiAgZ2V0LWt1YmUtY29uZmlndXJhdGlvbjoKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vVUtIb21lT2ZmaWNlL2t1YmUtcHR0Zy1pcC1hcGkuZ2l0CiAgICB3aGVuOgogICAgICBicmFuY2g6IFttYXN0ZXJdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnLCBkZXBsb3ltZW50XQoKICBkZXBsb3ktdG8tZGV2LWZyb20tYnVpbGQtbnVtYmVyOgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICAgIC0gS1VCRV9OQU1FU1BBQ0U9cHQtaS1kZXYKICAgICAgLSBFTlZJUk9OTUVOVD1kZXYKICAgICAgLSBWRVJTSU9OPWJ1aWxkLSR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICAtIEtVQkVfU0VSVkVSPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1pcC1hcGkKICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBbbWFzdGVyXQogICAgICBldmVudDogW3B1c2gsIHRhZ10KCiAgZGVwbG95LXRvLXByZXByb2QtZnJvbS1idWlsZC10YWc6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLXByZXByb2QKICAgICAgLSBFTlZJUk9OTUVOVD1wcmVwcm9kCiAgICAgIC0gVkVSU0lPTj0ke0RST05FX1RBR30KICAgICAgLSBLVUJFX1NFUlZFUj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctaXAtYXBpCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbdGFnXQoKICBkZXBsb3k6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgICAgLSBLVUJFX05BTUVTUEFDRT1wdC1pLSR7RFJPTkVfREVQTE9ZX1RPfQogICAgICAtIEVOVklST05NRU5UPSR7RFJPTkVfREVQTE9ZX1RPfQogICAgICAtIFZFUlNJT049JHtJTUFHRV9WRVJTSU9OfQogICAgICAtIEtVQkVfU0VSVkVSPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsKICAgIGNvbW1hbmRzOgogICAgICAtIGNkIGt1YmUtcHR0Zy1pcC1hcGkKICAgICAgLSAuL2RlcGxveS5zaAogICAgd2hlbjoKICAgICAgZXZlbnQ6IGRlcGxveW1lbnQKICAgICAgZW52aXJvbm1lbnQ6IFtkZXYsIHRlc3QsIHByZXByb2RdCgogIGRlcGxveS10by1wcm9kOgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICAgIC0gS1VCRV9OQU1FU1BBQ0U9cHQtaS1wcm9kCiAgICAgIC0gS1VCRV9UT0tFTj0ke1BST0RfS1VCRV9UT0tFTn0KICAgICAgLSBFTlZJUk9OTUVOVD1wcm9kCiAgICAgIC0gVkVSU0lPTj0ke0lNQUdFX1ZFUlNJT059CiAgICAgIC0gS1VCRV9TRVJWRVI9aHR0cHM6Ly9rdWJlLmRzcC5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrCiAgICBjb21tYW5kczoKICAgICAgLSBjZCBrdWJlLXB0dGctaXAtYXBpCiAgICAgIC0gLi9kZXBsb3kuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBkZXBsb3ltZW50CiAgICAgIGVudmlyb25tZW50OiBwcm9kCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Igo.MK1NOkxXjBQWJ5CzqMDWNSgqxpW8hCM-M4xdxFjzK_o