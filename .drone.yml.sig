eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIG15LWJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9vcGVuamRrODp2MS4wLjAKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSAuL2dyYWRsZXcgYnVpbGQKICAgIHdoZW46CiAgICAgIGJyYW5jaDogZHJvbmUKICAgICAgZXZlbnQ6IFtwdXNoLCBwdWxsX3JlcXVlc3RdCgogIG15LWRvY2tlci1idWlsZDoKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvcHR0Zy1pcC1hcGk6JHtEUk9ORV9DT01NSVRfU0hBfSAuCiAgICB3aGVuOgogICAgICBicmFuY2g6IGRyb25lCiAgICAgIGV2ZW50OiBwdXNoCgogIGltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrcHR0ZyIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIHB0dGctaXAtYXBpIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9wdHRnLWlwLWFwaToke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL3B0dGctaXAtYXBpOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGJyYW5jaDogZHJvbmUKICAgICAgZXZlbnQ6IHB1c2gKCiAgcHJlZGVwbG95OgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0CiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9VS0hvbWVPZmZpY2Uva3ViZS1wdHRnLWlwLWFwaS5naXQKICAgIHdoZW46CiAgICAgIGJyYW5jaDogZHJvbmUKICAgICAgZXZlbnQ6IFtwdXNoLCBkZXBsb3ltZW50XQoKICBkZXBsb3lfdG9fZGV2OgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICAgIC0gS1VCRV9OQU1FU1BBQ0U9cHQtaS1kZXYKICAgICAgLSBFTlZJUk9OTUVOVD1kZXYKICAgICAgLSBWRVJTSU9OPSR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBLVUJFX1NFUlZFUl9ERVY9aHR0cHM6Ly9rdWJlLWRldi5kc3Aubm90cHJvZC5ob21lb2ZmaWNlLmdvdi51awogICAgY29tbWFuZHM6CiAgICAgIC0gY2Qga3ViZS1wdHRnLWlwLWFwaQogICAgICAtIC4vZGVwbG95LnNoCiAgICB3aGVuOgogICAgICBicmFuY2g6IGRyb25lCiAgICAgIGVudmlyb25tZW50OiBkZXYKICAgICAgZXZlbnQ6IGRlcGxveW1lbnQKCiAgICBkZXBsb3lfdG9fdGVzdDoKICAgICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgICAgZW52aXJvbm1lbnQ6CiAgICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgICAgIC0gS1VCRV9OQU1FU1BBQ0U9cHQtaS10ZXN0CiAgICAgICAgLSBFTlZJUk9OTUVOVD10ZXN0CiAgICAgICAgLSBWRVJTSU9OPSR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgICAtIEtVQkVfU0VSVkVSX0RFVj1odHRwczovL2t1YmUtZGV2LmRzcC5ub3Rwcm9kLmhvbWVvZmZpY2UuZ292LnVrCiAgICAgIGNvbW1hbmRzOgogICAgICAgIC0gY2Qga3ViZS1wdHRnLWlwLWFwaQogICAgICAgIC0gLi9kZXBsb3kuc2gKICAgICAgd2hlbjoKICAgICAgICBicmFuY2g6IGRyb25lCiAgICAgICAgZW52aXJvbm1lbnQ6IHRlc3QKICAgICAgICBldmVudDogZGVwbG95bWVudAoKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIK.nEU1zgWyJFGlaDuvT1ECkM2cRF_wtWYZPB6Fc7I8E_0