pipeline:

  build-project:
    image: quay.io/ukhomeofficedigital/openjdk8:v1.1.0
    commands:
      - ./gradlew build
    when:
      event: [push, pull_request, tag]

  docker-build:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build -t pttg-ip-api .
    when:
      branch: [master, refs/tags/*]
      event: [push, tag]

  install-docker-image:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    secrets:
      - docker_password
    commands:
      - docker login -u="ukhomeofficedigital+pttg" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag pttg-ip-api quay.io/ukhomeofficedigital/pttg-ip-api:build-$${DRONE_BUILD_NUMBER}-ojr
      - docker push quay.io/ukhomeofficedigital/pttg-ip-api:build-$${DRONE_BUILD_NUMBER}-ojr
    when:
      event: push

  tag-docker-image-with-git-tag:
    image: docker:17.09.1
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    secrets:
      - docker_password
    commands:
      - docker login -u="ukhomeofficedigital+pttg" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag pttg-ip-api quay.io/ukhomeofficedigital/pttg-ip-api:$${DRONE_TAG}-ojr
      - docker push quay.io/ukhomeofficedigital/pttg-ip-api:$${DRONE_TAG}-ojr
    when:
      event: tag

  clone-kube-project:
    image: plugins/git
    commands:
      - git clone https://github.com/UKHomeOffice/kube-pttg-ip-api.git
    when:
      event: [push, tag, deployment]

  deploy-to-dev-from-build-number:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=pttg-ip-dev
      - ENVIRONMENT=dev
      - VERSION=build-${DRONE_BUILD_NUMBER}-ojr
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - pttg_ip_dev
    commands:
      - cd kube-pttg-ip-api
      - ./deploy.sh
    when:
#      branch: master TODO OJR EE-6825 Temporarily doing for branch to test
      event: [push, tag]

  deployment:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=pttg-ip-${DRONE_DEPLOY_TO}
      - ENVIRONMENT=${DRONE_DEPLOY_TO}
      - KUBE_SERVER=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
    secrets:
      - pttg_ip_dev
      - pttg_ip_test
    commands:
      - cd kube-pttg-ip-api
      - ./deploy.sh
    when:
      event: deployment
      environment: [dev, test, preprod]

  deploy-to-prod:
    image: quay.io/ukhomeofficedigital/kd:v0.8.0
    environment:
      - KUBE_NAMESPACE=pttg-ip-pr
      - ENVIRONMENT=pr
      - VERSION=${IMAGE_VERSION}
      - KUBE_SERVER=https://kube-api-prod.prod.acp.homeoffice.gov.uk
    secrets:
      - pttg_ip_pr
    commands:
      - cd kube-pttg-ip-api
      - ./deploy.sh
    when:
      event: deployment
      environment: pr


  run-smoke-tests-dev:
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    secrets:
      - pttg_ip_dev
    commands:
      - kubectl config set-cluster nonprod --insecure-skip-tls-verify=true --server=https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      - kubectl config set-context ips-dev --cluster=nonprod --namespace=pttg-ip-dev
      - kubectl config use-context ips-dev
      - SMOKE_TEST_POD=$(kubectl --token="$${PTTG_IP_DEV}" get pods | grep pttg-ip-smoke-tests | head -n 1 | cut -d ' ' -f 1)
      - echo SMOKE_TEST_POD = $SMOKE_TEST_POD
      - if ! kubectl --token="$${PTTG_IP_DEV}" exec "$${SMOKE_TEST_POD}" -- curl --fail -X POST 'http://localhost:8080/smoketests' ; then echo rollback ; fi
#      - if [ $? -ne 0 ] ; then kubectl --token="$${PTTG_IP_DEV}" rollout undo deployment/pttg-ip-api ; exit 1 ; fi
    when:
      event: push # TODO OJR EE-6825 - set for testing, should be deployment
